// Mocks generated by Mockito 5.4.6 from annotations
// in web3_signers/test/passkey_signer_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:passkeys/availability.dart' as _i3;
import 'package:passkeys/types.dart' as _i2;
import 'package:web3_signers/src/interfaces/interfaces.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRegisterResponseType_0 extends _i1.SmartFake
    implements _i2.RegisterResponseType {
  _FakeRegisterResponseType_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthenticateResponseType_1 extends _i1.SmartFake
    implements _i2.AuthenticateResponseType {
  _FakeAuthenticateResponseType_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetAvailability_2 extends _i1.SmartFake
    implements _i3.GetAvailability {
  _FakeGetAvailability_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Authenticator].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticator extends _i1.Mock implements _i4.Authenticator {
  @override
  bool get debugMode =>
      (super.noSuchMethod(
            Invocation.getter(#debugMode),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i5.Stream<_i2.Result> get resultStream =>
      (super.noSuchMethod(
            Invocation.getter(#resultStream),
            returnValue: _i5.Stream<_i2.Result>.empty(),
            returnValueForMissingStub: _i5.Stream<_i2.Result>.empty(),
          )
          as _i5.Stream<_i2.Result>);

  @override
  _i5.Future<bool> canAuthenticate() =>
      (super.noSuchMethod(
            Invocation.method(#canAuthenticate, []),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> cancelCurrentAuthenticatorOperation() =>
      (super.noSuchMethod(
            Invocation.method(#cancelCurrentAuthenticatorOperation, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.RegisterResponseType> register(
    _i2.RegisterRequestType? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#register, [request]),
            returnValue: _i5.Future<_i2.RegisterResponseType>.value(
              _FakeRegisterResponseType_0(
                this,
                Invocation.method(#register, [request]),
              ),
            ),
            returnValueForMissingStub:
                _i5.Future<_i2.RegisterResponseType>.value(
                  _FakeRegisterResponseType_0(
                    this,
                    Invocation.method(#register, [request]),
                  ),
                ),
          )
          as _i5.Future<_i2.RegisterResponseType>);

  @override
  _i5.Future<_i2.AuthenticateResponseType> authenticate(
    _i2.AuthenticateRequestType? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#authenticate, [request]),
            returnValue: _i5.Future<_i2.AuthenticateResponseType>.value(
              _FakeAuthenticateResponseType_1(
                this,
                Invocation.method(#authenticate, [request]),
              ),
            ),
            returnValueForMissingStub:
                _i5.Future<_i2.AuthenticateResponseType>.value(
                  _FakeAuthenticateResponseType_1(
                    this,
                    Invocation.method(#authenticate, [request]),
                  ),
                ),
          )
          as _i5.Future<_i2.AuthenticateResponseType>);

  @override
  _i3.GetAvailability getAvailability() =>
      (super.noSuchMethod(
            Invocation.method(#getAvailability, []),
            returnValue: _FakeGetAvailability_2(
              this,
              Invocation.method(#getAvailability, []),
            ),
            returnValueForMissingStub: _FakeGetAvailability_2(
              this,
              Invocation.method(#getAvailability, []),
            ),
          )
          as _i3.GetAvailability);
}
